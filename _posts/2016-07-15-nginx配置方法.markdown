---
layout:     post
title:      "nginx配置方法"
subtitle:   "在Mac OS X 上编译安装nginx，这也是实习中联调用到的第一个工具，值得mark一下"
date:       2016-07-15 10:00:00
author:     "Lang Yicong"
header-img: "img/coffee-01.jpg"
---
<blockquote>Nginx是一款面向性能设计的HTTP服务器，相较于Apache、lighttpd具有占有内存少，稳定性高等优势。</blockquote>
<h3>
    <strong>1. 安装PCRE库</strong>
</h3>
<p>
    可以在<a href="http://www.pcre.org/" target="_blank">这里</a>下载最新版
</p>
<code>
    cd ~/Download
</code>
<p>双击下载的压缩包解压缩，进入相应的文件夹</p>
<code>cd pcre-x.xx<br/>
    sudo ./configure --prefix=/usr/local<br/>
    sudo make<br/>
    sudo make install
</code>

<h3>
    <strong>2.下载安装nginx</strong>
</h3>
<p>
    首先在<a href="http://nginx.org/" target="_blank">nginx官网</a>下载最新的源码
</p>
<p>双击解压缩后，进入目录，配置环境，编译安装: </p>
<code>cd nginx-1.x.x<br/>
    sudo ./configure --prefix=/usr/local --with-http_ssl_module --with-ld-opt="-L /usr/local/lib"<br/>
    sudo make<br/>
    sudo make install
</code>

<h3>
    <strong>3.启动Nginx</strong>
</h3>
<p>检查PATH环境变量</p>
<code># ~/.bash_profile export PATH=/usr/local/bin:/usr/local/sbin:$PATH<br/>
cd /usr/local/sbin<br/>
sudo ./nginx<br/>
</code>
<p>如果出现错误：</p>
<code class="error-code">
    nginx: [emerg] bind() to 0.0.0.0:80 failed (48: Address already in use)<br/>
nginx: [emerg] bind() to 0.0.0.0:80 failed (48: Address already in use)<br/>
nginx: [emerg] bind() to 0.0.0.0:80 failed (48: Address already in use)<br/>
nginx: [emerg] bind() to 0.0.0.0:80 failed (48: Address already in use)<br/>
nginx: [emerg] bind() to 0.0.0.0:80 failed (48: Address already in use)<br/>
nginx: [emerg] still could not bind()
</code>

<p>运行：</p>
<code>sudo killall nginx</code>
<p>来强制停止Nginx，如果不能起作用，就尝试下面的命令（stackoverflow查到的，这个问题搞了半天才解决）</p>
<code>pkill -9 nginx</code>

<p>最后访问<a href="http://localhost" target="_blank">http://localhost</a>，可以看到如下画面，则说明nginx启动成功：</p>
<img src="{{ site.baseurl }}/img/posts/nginx1.png"  alt="welcome to nginx">

<p>需要停止Nginx的时候运行</p>
<code>sudo nginx -s stop</code>

<h3>
    <strong>4.配置和重新启动</strong>
</h3>
<p><strong>重要的事情说三遍！用mac终端，不要用iterm！用mac终端，不要用iterm！用mac终端，不要用iterm！</strong></p>
<p>sudo修改config文件</p>

<code>vim /usr/local/conf/nginx.conf</code>
<p>http模块内加入include语句，方便修改server</p>
<code>"include /Users/{yourusername}/nginx/nginx.conf;"</code>
<p>然后用文本编辑器修改配置文件模块</p>
<code>sudo open /Users/sherry/nginx/nginx.conf</code>

<p>server{}块定义了虚拟主机，下面是参考的server写法</p>
<pre>
server {
    listen 8081;   <span class="com">#本地访问的端口</span>
    server_name localhost;  <span class="com">#本地访问需要输入的url</span>
    location / {
        root /Users/sherry/getui/git/data-report-management/src;
        <span class="com">#无需转发，自动搜寻index.html</span>
    }
    <span class="com">#通过以上配置，在浏览器输入localhost:8081即可访问index.html</span>

    location ^~ /dataReport/ {  <span class="com">#/dataReport/下的内通过建立虚拟服务器访问</span>
        proxy_set_header Host 192.168.2.159; <span class="com">#http_host</span>
        proxy_pass http://192.168.2.159:8081; <span class="com">#后端主机和端口</span>
    }
    
    <span class="com">#更多location配置</span>
}
</pre>

<p>s重启nginx</p>
<code>sudo /usr/local/sbin/nginx -s reload</code>
<p>访问：<a href="http://localhost:8081">http://localhost:8081</a>
即可登录<p>
<p>根据后端接口文档，现在浏览器访问：
http://localhost(主机名):8081(端口号)/dataReport/user/addUser.do
即可得到返回数据<p>
